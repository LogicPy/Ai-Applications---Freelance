Reflected XSS (AKA Non-Persistent or Type I)
Reflected XSS occurs when user input is immediately returned by a web application in an error message, search result, or any other response that includes some or all of the input provided by the user...

Reflected XSS (AKA Non-Persistent or Type I)
Another description of Reflected XSS where user input is echoed in the response without proper sanitization...

Stored XSS (AKA Persistent or Type II)
Stored XSS generally occurs when user input is stored on the target server, such as in a database, message forum, visitor log, comment field, etc...

Stored XSS (AKA Persistent or Type II)
Another example of Stored XSS where malicious scripts are stored and executed upon retrieval...

DOM Based XSS (AKA Type-0)
DOM Based XSS is an XSS attack wherein the attack payload is executed as a result of modifying the DOM environment in the victim’s browser...

SQL Injection (SQLi)
Description: SQL Injection occurs when untrusted data is sent to an interpreter as part of a SQL query. This allows attackers to execute arbitrary SQL commands.
Impact: Unauthorized access to sensitive data, bypassing authentication, modifying databases, and deleting data.

Cross-Site Request Forgery (CSRF)
Description: CSRF tricks users into performing actions they did not intend by leveraging their authenticated session in a web application.
Impact: Unauthorized actions, such as changing user information or transferring funds without user consent.

Remote Code Execution (RCE)
Description: Remote Code Execution occurs when an attacker can execute arbitrary commands on a system due to insufficient input validation.
Impact: Full system compromise, data exfiltration, and network propagation of malware.

Directory Traversal
Description: Directory Traversal enables attackers to access files and directories that are stored outside the web root folder.
Impact: Unauthorized access to system files, sensitive data leakage, and potential execution of system-level commands.

Command Injection
Description: Command Injection exploits user input fields to pass arbitrary commands to the system without proper validation.
Impact: Execution of arbitrary system commands, leading to full control of the system.

Broken Authentication and Session Management
Description: Weak session management vulnerabilities occur when session tokens are not properly protected or invalidated.
Impact: Identity theft, privilege escalation, and unauthorized actions in the application.

File Inclusion (RFI/LFI)
Description: File inclusion vulnerabilities allow an attacker to include remote or local files in the application’s execution.
Impact: Execution of malicious code, data theft, and control over the application server.

...

Server-Side Request Forgery (SSRF)
Overview
Server-Side Request Forgery (SSRF) occurs when an attacker can trick a server into making HTTP requests to an unintended location. This vulnerability allows attackers to access internal systems, retrieve sensitive data, or perform actions on behalf of the server without proper authorization...

Server-Side Request Forgery (SSRF)
Impact
SSRF can lead to unauthorized access to internal services, data exfiltration, remote code execution, and denial of service (DoS)...
