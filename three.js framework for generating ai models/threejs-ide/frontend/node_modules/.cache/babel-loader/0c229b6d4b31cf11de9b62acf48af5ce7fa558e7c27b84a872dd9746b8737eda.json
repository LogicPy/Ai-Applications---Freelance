{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\threejs_ide\\\\threejs-ide\\\\frontend\\\\src\\\\components\\\\ThreeJSRenderer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as THREE from 'three';\nimport * as esprima from 'esprima';\nimport { OBJExporter } from 'three/examples/jsm/exporters/OBJExporter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeJSRenderer = ({\n  code\n}) => {\n  _s();\n  const mountRef = useRef(null);\n  const meshRef = useRef(null); // Reference to the generated mesh\n\n  useEffect(() => {\n    if (!code) return;\n\n    // Clear any existing scene\n    mountRef.current.innerHTML = '';\n\n    // Create a new scene, camera, and renderer\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, mountRef.current.clientWidth / mountRef.current.clientHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(mountRef.current.clientWidth, mountRef.current.clientHeight);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Log the generated code for debugging\n    console.log('Executing Three.js Code:', code);\n\n    // Create a function to execute the generated code\n    const executeCode = () => {\n      try {\n        const func = new Function('THREE', 'scene', 'camera', 'renderer', 'meshRef', code);\n        func(THREE, scene, camera, renderer, meshRef);\n      } catch (error) {\n        console.error('Error executing generated Three.js code:', error);\n      }\n    };\n    executeCode();\n\n    // Animation loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Cleanup on component unmount\n    return () => {\n      mountRef.current.innerHTML = '';\n    };\n  }, [code]);\n\n  // Export function that triggers OBJExporter\n  const exportModelAsObj = () => {\n    const exporter = new OBJExporter();\n    const objData = exporter.parse(meshRef.current); // Export the mesh\n\n    // Trigger download of the .obj file\n    const blob = new Blob([objData], {\n      type: 'text/plain'\n    });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = 'model.obj';\n    link.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef,\n      style: {\n        width: '100%',\n        height: '100vh'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: exportModelAsObj,\n      children: \"Export as .obj\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(ThreeJSRenderer, \"3ZVm3qGyOnSPBn2M4J4SAghduuA=\");\n_c = ThreeJSRenderer;\nexport default ThreeJSRenderer;\nvar _c;\n$RefreshReg$(_c, \"ThreeJSRenderer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","THREE","esprima","OBJExporter","jsxDEV","_jsxDEV","ThreeJSRenderer","code","_s","mountRef","meshRef","current","innerHTML","scene","Scene","camera","PerspectiveCamera","clientWidth","clientHeight","renderer","WebGLRenderer","antialias","setSize","appendChild","domElement","console","log","executeCode","func","Function","error","animate","requestAnimationFrame","render","exportModelAsObj","exporter","objData","parse","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","download","click","children","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/threejs_ide/threejs-ide/frontend/src/components/ThreeJSRenderer.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as THREE from 'three';\r\nimport * as esprima from 'esprima';\r\n\r\nimport { OBJExporter } from 'three/examples/jsm/exporters/OBJExporter';\r\n\r\nconst ThreeJSRenderer = ({ code }) => {\r\n  const mountRef = useRef(null);\r\n  const meshRef = useRef(null);  // Reference to the generated mesh\r\n\r\n  useEffect(() => {\r\n    if (!code) return;\r\n\r\n    // Clear any existing scene\r\n    mountRef.current.innerHTML = '';\r\n\r\n    // Create a new scene, camera, and renderer\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      mountRef.current.clientWidth / mountRef.current.clientHeight,\r\n      0.1,\r\n      1000\r\n    );\r\n\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(mountRef.current.clientWidth, mountRef.current.clientHeight);\r\n    mountRef.current.appendChild(renderer.domElement);\r\n\r\n    // Log the generated code for debugging\r\n    console.log('Executing Three.js Code:', code);\r\n\r\n    // Create a function to execute the generated code\r\n    const executeCode = () => {\r\n      try {\r\n        const func = new Function('THREE', 'scene', 'camera', 'renderer', 'meshRef', code);\r\n        func(THREE, scene, camera, renderer, meshRef);\r\n      } catch (error) {\r\n        console.error('Error executing generated Three.js code:', error);\r\n      }\r\n    };\r\n\r\n    executeCode();\r\n\r\n    // Animation loop\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      renderer.render(scene, camera);\r\n    };\r\n\r\n    animate();\r\n\r\n    // Cleanup on component unmount\r\n    return () => {\r\n      mountRef.current.innerHTML = '';\r\n    };\r\n  }, [code]);\r\n\r\n  // Export function that triggers OBJExporter\r\n  const exportModelAsObj = () => {\r\n    const exporter = new OBJExporter();\r\n    const objData = exporter.parse(meshRef.current);  // Export the mesh\r\n\r\n    // Trigger download of the .obj file\r\n    const blob = new Blob([objData], { type: 'text/plain' });\r\n    const link = document.createElement('a');\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = 'model.obj';\r\n    link.click();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div ref={mountRef} style={{ width: '100%', height: '100vh' }} />\r\n      {/* Add a button for exporting */}\r\n      <button onClick={exportModelAsObj}>Export as .obj</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreeJSRenderer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAO,KAAKC,OAAO,MAAM,SAAS;AAElC,SAASC,WAAW,QAAQ,0CAA0C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAMC,QAAQ,GAAGV,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMW,OAAO,GAAGX,MAAM,CAAC,IAAI,CAAC,CAAC,CAAE;;EAE/BD,SAAS,CAAC,MAAM;IACd,IAAI,CAACS,IAAI,EAAE;;IAEX;IACAE,QAAQ,CAACE,OAAO,CAACC,SAAS,GAAG,EAAE;;IAE/B;IACA,MAAMC,KAAK,GAAG,IAAIZ,KAAK,CAACa,KAAK,CAAC,CAAC;IAC/B,MAAMC,MAAM,GAAG,IAAId,KAAK,CAACe,iBAAiB,CACxC,EAAE,EACFP,QAAQ,CAACE,OAAO,CAACM,WAAW,GAAGR,QAAQ,CAACE,OAAO,CAACO,YAAY,EAC5D,GAAG,EACH,IACF,CAAC;IAED,MAAMC,QAAQ,GAAG,IAAIlB,KAAK,CAACmB,aAAa,CAAC;MAAEC,SAAS,EAAE;IAAK,CAAC,CAAC;IAC7DF,QAAQ,CAACG,OAAO,CAACb,QAAQ,CAACE,OAAO,CAACM,WAAW,EAAER,QAAQ,CAACE,OAAO,CAACO,YAAY,CAAC;IAC7ET,QAAQ,CAACE,OAAO,CAACY,WAAW,CAACJ,QAAQ,CAACK,UAAU,CAAC;;IAEjD;IACAC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEnB,IAAI,CAAC;;IAE7C;IACA,MAAMoB,WAAW,GAAGA,CAAA,KAAM;MACxB,IAAI;QACF,MAAMC,IAAI,GAAG,IAAIC,QAAQ,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAEtB,IAAI,CAAC;QAClFqB,IAAI,CAAC3B,KAAK,EAAEY,KAAK,EAAEE,MAAM,EAAEI,QAAQ,EAAET,OAAO,CAAC;MAC/C,CAAC,CAAC,OAAOoB,KAAK,EAAE;QACdL,OAAO,CAACK,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;MAClE;IACF,CAAC;IAEDH,WAAW,CAAC,CAAC;;IAEb;IACA,MAAMI,OAAO,GAAGA,CAAA,KAAM;MACpBC,qBAAqB,CAACD,OAAO,CAAC;MAC9BZ,QAAQ,CAACc,MAAM,CAACpB,KAAK,EAAEE,MAAM,CAAC;IAChC,CAAC;IAEDgB,OAAO,CAAC,CAAC;;IAET;IACA,OAAO,MAAM;MACXtB,QAAQ,CAACE,OAAO,CAACC,SAAS,GAAG,EAAE;IACjC,CAAC;EACH,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;;EAEV;EACA,MAAM2B,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,QAAQ,GAAG,IAAIhC,WAAW,CAAC,CAAC;IAClC,MAAMiC,OAAO,GAAGD,QAAQ,CAACE,KAAK,CAAC3B,OAAO,CAACC,OAAO,CAAC,CAAC,CAAE;;IAElD;IACA,MAAM2B,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACH,OAAO,CAAC,EAAE;MAAEI,IAAI,EAAE;IAAa,CAAC,CAAC;IACxD,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,IAAI,GAAGC,GAAG,CAACC,eAAe,CAACR,IAAI,CAAC;IACrCG,IAAI,CAACM,QAAQ,GAAG,WAAW;IAC3BN,IAAI,CAACO,KAAK,CAAC,CAAC;EACd,CAAC;EAED,oBACE3C,OAAA;IAAA4C,QAAA,gBACE5C,OAAA;MAAK6C,GAAG,EAAEzC,QAAS;MAAC0C,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAQ;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEjEpD,OAAA;MAAQqD,OAAO,EAAExB,gBAAiB;MAAAe,QAAA,EAAC;IAAc;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV,CAAC;AAACjD,EAAA,CAxEIF,eAAe;AAAAqD,EAAA,GAAfrD,eAAe;AA0ErB,eAAeA,eAAe;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}