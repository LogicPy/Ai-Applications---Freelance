{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\threejs_ide\\\\threejs-ide\\\\frontend\\\\src\\\\components\\\\ThreeJSRenderer.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/ThreeJSRenderer.js\n\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'; // Add this import\nimport { OBJExporter } from 'three/examples/jsm/exporters/OBJExporter'; // Import OBJExporter\nimport * as esprima from 'esprima';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeJSRenderer = ({\n  code\n}) => {\n  _s();\n  const mountRef = useRef(null);\n  const sceneRef = useRef(null); // Reference to the scene for exporting\n  const cameraRef = useRef(null);\n  const rendererRef = useRef(null);\n  useEffect(() => {\n    if (!code) return;\n\n    // Clear any existing scene\n    mountRef.current.innerHTML = '';\n\n    // Create a new scene, camera, and renderer\n    const scene = new THREE.Scene();\n    sceneRef.current = scene; // Assign the scene to the ref for later access\n\n    const camera = new THREE.PerspectiveCamera(75, mountRef.current.clientWidth / mountRef.current.clientHeight, 0.1, 1000);\n    camera.position.set(0, 2, 5); // Adjust camera position for better view\n    cameraRef.current = camera; // Store the camera in ref for later use\n\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(mountRef.current.clientWidth, mountRef.current.clientHeight);\n    mountRef.current.appendChild(renderer.domElement);\n    rendererRef.current = renderer; // Store the renderer for export\n\n    // Add OrbitControls for mouse interaction\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controls.screenSpacePanning = false;\n    controls.minDistance = 1;\n    controls.maxDistance = 500;\n    controls.maxPolarAngle = Math.PI / 2;\n\n    // Log the generated code for debugging\n    console.log('Executing Three.js Code:', code);\n\n    // Validate the generated code syntax using Esprima\n    try {\n      esprima.parseScript(code);\n    } catch (parseError) {\n      console.error('Generated code has syntax errors:', parseError.message);\n      return; // Stop execution if syntax errors are found\n    }\n\n    // Create a function to execute the generated code\n    const executeCode = () => {\n      try {\n        console.log('Executing Function Constructor with code:', code);\n        const func = new Function('THREE', 'scene', 'camera', 'renderer', code);\n        func(THREE, scene, camera, renderer);\n        console.log('Code executed successfully.');\n      } catch (error) {\n        console.error('Error executing generated Three.js code:', error);\n      }\n    };\n    executeCode();\n\n    // Animation loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n      controls.update(); // Update controls on each frame\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Cleanup on component unmount\n    return () => {\n      mountRef.current.innerHTML = '';\n    };\n  }, [code]);\n\n  // Export function to save the model as an OBJ file\n  const exportModelAsObj = () => {\n    const exporter = new OBJExporter();\n    if (sceneRef.current && sceneRef.current.children.length > 0) {\n      const objData = exporter.parse(sceneRef.current); // Export the current scene\n      const blob = new Blob([objData], {\n        type: 'text/plain'\n      });\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = 'model.obj';\n      link.click();\n      console.log('Model exported as OBJ.');\n    } else {\n      console.error('No objects found in the scene for export.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef,\n      style: {\n        width: '100%',\n        height: '100vh'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: exportModelAsObj,\n      children: \"Export as OBJ\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(ThreeJSRenderer, \"TnT/ZBr4Qnx26Gaz+Sg2iZl8HIo=\");\n_c = ThreeJSRenderer;\nexport default ThreeJSRenderer;\nvar _c;\n$RefreshReg$(_c, \"ThreeJSRenderer\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","OrbitControls","OBJExporter","esprima","jsxDEV","_jsxDEV","ThreeJSRenderer","code","_s","mountRef","sceneRef","cameraRef","rendererRef","current","innerHTML","scene","Scene","camera","PerspectiveCamera","clientWidth","clientHeight","position","set","renderer","WebGLRenderer","antialias","setSize","appendChild","domElement","controls","enableDamping","dampingFactor","screenSpacePanning","minDistance","maxDistance","maxPolarAngle","Math","PI","console","log","parseScript","parseError","error","message","executeCode","func","Function","animate","requestAnimationFrame","update","render","exportModelAsObj","exporter","children","length","objData","parse","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","download","click","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/threejs_ide/threejs-ide/frontend/src/components/ThreeJSRenderer.js"],"sourcesContent":["// frontend/src/components/ThreeJSRenderer.js\r\n\r\nimport React, { useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'; // Add this import\r\nimport { OBJExporter } from 'three/examples/jsm/exporters/OBJExporter'; // Import OBJExporter\r\nimport * as esprima from 'esprima';\r\n\r\nconst ThreeJSRenderer = ({ code }) => {\r\n  const mountRef = useRef(null);\r\n  const sceneRef = useRef(null);  // Reference to the scene for exporting\r\n  const cameraRef = useRef(null);\r\n  const rendererRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!code) return;\r\n\r\n    // Clear any existing scene\r\n    mountRef.current.innerHTML = '';\r\n\r\n    // Create a new scene, camera, and renderer\r\n    const scene = new THREE.Scene();\r\n    sceneRef.current = scene;  // Assign the scene to the ref for later access\r\n\r\n    const camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      mountRef.current.clientWidth / mountRef.current.clientHeight,\r\n      0.1,\r\n      1000\r\n    );\r\n    camera.position.set(0, 2, 5); // Adjust camera position for better view\r\n    cameraRef.current = camera;  // Store the camera in ref for later use\r\n\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(mountRef.current.clientWidth, mountRef.current.clientHeight);\r\n    mountRef.current.appendChild(renderer.domElement);\r\n    rendererRef.current = renderer;  // Store the renderer for export\r\n\r\n    // Add OrbitControls for mouse interaction\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.enableDamping = true;\r\n    controls.dampingFactor = 0.05;\r\n    controls.screenSpacePanning = false;\r\n    controls.minDistance = 1;\r\n    controls.maxDistance = 500;\r\n    controls.maxPolarAngle = Math.PI / 2;\r\n\r\n    // Log the generated code for debugging\r\n    console.log('Executing Three.js Code:', code);\r\n\r\n    // Validate the generated code syntax using Esprima\r\n    try {\r\n      esprima.parseScript(code);\r\n    } catch (parseError) {\r\n      console.error('Generated code has syntax errors:', parseError.message);\r\n      return; // Stop execution if syntax errors are found\r\n    }\r\n\r\n    // Create a function to execute the generated code\r\n    const executeCode = () => {\r\n      try {\r\n        console.log('Executing Function Constructor with code:', code);\r\n        const func = new Function('THREE', 'scene', 'camera', 'renderer', code);\r\n        func(THREE, scene, camera, renderer);\r\n        console.log('Code executed successfully.');\r\n      } catch (error) {\r\n        console.error('Error executing generated Three.js code:', error);\r\n      }\r\n    };\r\n\r\n    executeCode();\r\n\r\n    // Animation loop\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      controls.update(); // Update controls on each frame\r\n      renderer.render(scene, camera);\r\n    };\r\n\r\n    animate();\r\n\r\n    // Cleanup on component unmount\r\n    return () => {\r\n      mountRef.current.innerHTML = '';\r\n    };\r\n  }, [code]);\r\n\r\n  // Export function to save the model as an OBJ file\r\n  const exportModelAsObj = () => {\r\n    const exporter = new OBJExporter();\r\n\r\n    if (sceneRef.current && sceneRef.current.children.length > 0) {\r\n      const objData = exporter.parse(sceneRef.current);  // Export the current scene\r\n      const blob = new Blob([objData], { type: 'text/plain' });\r\n      const link = document.createElement('a');\r\n      link.href = URL.createObjectURL(blob);\r\n      link.download = 'model.obj';\r\n      link.click();\r\n      console.log('Model exported as OBJ.');\r\n    } else {\r\n      console.error('No objects found in the scene for export.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div ref={mountRef} style={{ width: '100%', height: '100vh' }} />\r\n      <button onClick={exportModelAsObj}>Export as OBJ</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreeJSRenderer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}