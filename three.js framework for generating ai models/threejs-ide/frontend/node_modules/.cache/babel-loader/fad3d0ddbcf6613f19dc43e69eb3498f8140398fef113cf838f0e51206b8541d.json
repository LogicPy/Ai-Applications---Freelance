{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\threejs_ide\\\\threejs-ide\\\\frontend\\\\src\\\\components\\\\ThreeJSRenderer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'; // Import OrbitControls for navigation\nimport { OBJExporter } from 'three-stdlib';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeJSRenderer = ({\n  code\n}) => {\n  _s();\n  const mountRef = useRef(null);\n  const controlsRef = useRef(null);\n  const meshRef = useRef(null); // Reference to the generated mesh\n  const cameraRef = useRef(null); // Camera reference for controls\n\n  useEffect(() => {\n    if (!code) return;\n\n    // Clear any existing scene\n    mountRef.current.innerHTML = '';\n\n    // Create a new scene, camera, and renderer\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, mountRef.current.clientWidth / mountRef.current.clientHeight, 0.1, 1000);\n    camera.position.set(2, 2, 2); // Set initial camera position\n    cameraRef.current = camera;\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(mountRef.current.clientWidth, mountRef.current.clientHeight);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Add OrbitControls for navigation\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controlsRef.current = controls;\n    controls.update();\n\n    // Log the generated code for debugging\n    console.log('Executing Three.js Code:', code);\n\n    // Create a function to execute the generated code\n    const executeCode = () => {\n      try {\n        const func = new Function('THREE', 'scene', 'camera', 'renderer', 'meshRef', code);\n        func(THREE, scene, camera, renderer, meshRef);\n      } catch (error) {\n        console.error('Error executing generated Three.js code:', error);\n      }\n    };\n    executeCode();\n\n    // Animation loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n      controls.update(); // Ensure the controls update\n    };\n    animate();\n\n    // Cleanup on component unmount\n    return () => {\n      mountRef.current.innerHTML = '';\n    };\n  }, [code]);\n  const exportModelAsObj = () => {\n    if (scene && scene.children.length > 0) {\n      const exporter = new OBJExporter();\n\n      // Assuming you want to export the first object in the scene\n      const model = scene.children[0]; // Replace if you want to export a specific mesh\n\n      if (model) {\n        const objData = exporter.parse(model); // Export the object\n\n        // Trigger download of the .obj file\n        const blob = new Blob([objData], {\n          type: 'text/plain'\n        });\n        const link = document.createElement('a');\n        link.href = URL.createObjectURL(blob);\n        link.download = 'model.obj';\n        link.click();\n      } else {\n        console.error('No model found for export');\n      }\n    } else {\n      console.error('Scene or objects are not initialized properly for export');\n    }\n  };\n\n  // Zoom in function\n  const handleZoomIn = () => {\n    const camera = cameraRef.current;\n    if (camera) {\n      camera.position.z -= 0.5;\n      camera.updateProjectionMatrix();\n    }\n  };\n\n  // Zoom out function\n  const handleZoomOut = () => {\n    const camera = cameraRef.current;\n    if (camera) {\n      camera.position.z += 0.5;\n      camera.updateProjectionMatrix();\n    }\n  };\n\n  // Reset camera function\n  const handleResetCamera = () => {\n    const camera = cameraRef.current;\n    if (camera) {\n      camera.position.set(2, 2, 2); // Reset to initial position\n      camera.lookAt(0, 0, 0);\n      camera.updateProjectionMatrix();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef,\n      style: {\n        width: '100%',\n        height: '100vh'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleZoomIn,\n        children: \"\\uD83D\\uDD0D Zoom In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleZoomOut,\n        children: \"\\uD83D\\uDD0D Zoom Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleResetCamera,\n        children: \"\\uD83D\\uDD04 Reset Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportModelAsObj,\n        children: \"\\uD83D\\uDCBE Export as .obj\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(ThreeJSRenderer, \"eIhsKLQPc4ZRfZo6P+8ukEV/Icw=\");\n_c = ThreeJSRenderer;\nexport default ThreeJSRenderer;\nvar _c;\n$RefreshReg$(_c, \"ThreeJSRenderer\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","OrbitControls","OBJExporter","jsxDEV","_jsxDEV","ThreeJSRenderer","code","_s","mountRef","controlsRef","meshRef","cameraRef","current","innerHTML","scene","Scene","camera","PerspectiveCamera","clientWidth","clientHeight","position","set","renderer","WebGLRenderer","antialias","setSize","appendChild","domElement","controls","update","console","log","executeCode","func","Function","error","animate","requestAnimationFrame","render","exportModelAsObj","children","length","exporter","model","objData","parse","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","download","click","handleZoomIn","z","updateProjectionMatrix","handleZoomOut","handleResetCamera","lookAt","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","marginTop","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/threejs_ide/threejs-ide/frontend/src/components/ThreeJSRenderer.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\n\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'; // Import OrbitControls for navigation\r\nimport { OBJExporter } from 'three-stdlib';\r\n\r\nconst ThreeJSRenderer = ({ code }) => {\r\n  const mountRef = useRef(null);\r\n  const controlsRef = useRef(null);\r\n  const meshRef = useRef(null);  // Reference to the generated mesh\r\n  const cameraRef = useRef(null); // Camera reference for controls\r\n\r\n  useEffect(() => {\r\n    if (!code) return;\r\n\r\n    // Clear any existing scene\r\n    mountRef.current.innerHTML = '';\r\n\r\n    // Create a new scene, camera, and renderer\r\n    const scene = new THREE.Scene();\r\n\r\n    const camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      mountRef.current.clientWidth / mountRef.current.clientHeight,\r\n      0.1,\r\n      1000\r\n    );\r\n    camera.position.set(2, 2, 2); // Set initial camera position\r\n    cameraRef.current = camera;\r\n\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(mountRef.current.clientWidth, mountRef.current.clientHeight);\r\n    mountRef.current.appendChild(renderer.domElement);\r\n\r\n    // Add OrbitControls for navigation\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n    controlsRef.current = controls;\r\n    controls.update();\r\n\r\n    // Log the generated code for debugging\r\n    console.log('Executing Three.js Code:', code);\r\n\r\n    // Create a function to execute the generated code\r\n    const executeCode = () => {\r\n      try {\r\n        const func = new Function('THREE', 'scene', 'camera', 'renderer', 'meshRef', code);\r\n        func(THREE, scene, camera, renderer, meshRef);\r\n      } catch (error) {\r\n        console.error('Error executing generated Three.js code:', error);\r\n      }\r\n    };\r\n\r\n    executeCode();\r\n\r\n    // Animation loop\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      renderer.render(scene, camera);\r\n      controls.update(); // Ensure the controls update\r\n    };\r\n\r\n    animate();\r\n\r\n    // Cleanup on component unmount\r\n    return () => {\r\n      mountRef.current.innerHTML = '';\r\n    };\r\n  }, [code]);\r\n\r\nconst exportModelAsObj = () => {\r\n  if (scene && scene.children.length > 0) {\r\n    const exporter = new OBJExporter();\r\n    \r\n    // Assuming you want to export the first object in the scene\r\n    const model = scene.children[0]; // Replace if you want to export a specific mesh\r\n\r\n    if (model) {\r\n      const objData = exporter.parse(model);  // Export the object\r\n\r\n      // Trigger download of the .obj file\r\n      const blob = new Blob([objData], { type: 'text/plain' });\r\n      const link = document.createElement('a');\r\n      link.href = URL.createObjectURL(blob);\r\n      link.download = 'model.obj';\r\n      link.click();\r\n    } else {\r\n      console.error('No model found for export');\r\n    }\r\n  } else {\r\n    console.error('Scene or objects are not initialized properly for export');\r\n  }\r\n};\r\n\r\n\r\n\r\n  // Zoom in function\r\n  const handleZoomIn = () => {\r\n    const camera = cameraRef.current;\r\n    if (camera) {\r\n      camera.position.z -= 0.5;\r\n      camera.updateProjectionMatrix();\r\n    }\r\n  };\r\n\r\n  // Zoom out function\r\n  const handleZoomOut = () => {\r\n    const camera = cameraRef.current;\r\n    if (camera) {\r\n      camera.position.z += 0.5;\r\n      camera.updateProjectionMatrix();\r\n    }\r\n  };\r\n\r\n  // Reset camera function\r\n  const handleResetCamera = () => {\r\n    const camera = cameraRef.current;\r\n    if (camera) {\r\n      camera.position.set(2, 2, 2); // Reset to initial position\r\n      camera.lookAt(0, 0, 0);\r\n      camera.updateProjectionMatrix();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div ref={mountRef} style={{ width: '100%', height: '100vh' }} />\r\n      \r\n      {/* Navigation controls */}\r\n      <div style={{ display: 'flex', justifyContent: 'center', marginTop: '10px' }}>\r\n        <button onClick={handleZoomIn}>🔍 Zoom In</button>\r\n        <button onClick={handleZoomOut}>🔍 Zoom Out</button>\r\n        <button onClick={handleResetCamera}>🔄 Reset Camera</button>\r\n      </div>\r\n      \r\n      {/* Export button */}\r\n      <div style={{ display: 'flex', justifyContent: 'center', marginTop: '10px' }}>\r\n        <button onClick={exportModelAsObj}>💾 Export as .obj</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreeJSRenderer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}